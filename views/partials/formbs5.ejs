<main class="p-sm-3 w-100 h-100">
  <div class="w-100 h-25 text-center pt-5">
  </div>
  <div class="w-100 h-25 pt-3">
    <h6 class="text-center">Have a crypto address and don't know what blockchain it's on? Use this web app to find it.</h6>
    <br>
    <form action="/" method="post" class="needs-validation" id="satsForm" novalidate>
      <div class="input-group in input-group-sm mb-3">
        
          <span class="input-group-text input-group-sm">
          <button class="btn btn-outline-secondary" type="button" id="pasteButton">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-clipboard" viewBox="0 0 16 16">
              <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"/>
              <path d="M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"/>
            </svg>
          </button>
        </span>
        
        <input type="search" class="form-control" name="cryptoAddress" id="clipboardInput" placeholder="Paste Crytpo Address Here" value="<%= locals.cryptoAddress ? locals.cryptoAddress : '' %>" pattern="^[a-zA-Z0-9]+\.{0,3}-?" minlength="3" maxlength="100" required>
       
        <span class="input-group-text input-group-sm">
          <button class="btn btn-outline-secondary" type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
              <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
            </svg>
          </button>
        </span>
       
        <div class="invalid-feedback border" id="msg" >
          
        </div>
     
      </div>
     
      </form>
      
  </div>
  <div class="container w-100 h-50">
    
    <div class="container">
      <h4>Results:</h4>
    </div>
    <div class="d-flex flex-column mb-3">
     
    </div>
    <div class="p-2"> <%- currencyNamesMatch %></div>
        
    

  </div>
 
</main>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const clipboardInput = document.getElementById("clipboardInput");
    const pasteButton = document.getElementById("pasteButton");

    // Add a click event listener to the Paste button
    pasteButton.addEventListener("click", function () {
      // Use the Clipboard API to access clipboard data
      navigator.clipboard.readText().then(function (clipboardData) {
        // Populate the input field with clipboard data
        clipboardInput.value = clipboardData;
      }).catch(function (error) {
        console.error("Unable to read clipboard data: ", error);
      });
    });
  });
</script>

<script>
  // Add an event listener for form submission
  document.getElementById("satsForm").addEventListener("submit", function(event) {
    const feedbackDiv = document.getElementById("msg");
    const inputField = document.getElementById('clipboardInput');
    // Check if the form is valid
      if (!this.checkValidity()) {
          event.preventDefault(); // Prevent the form from submitting if it's not valid
          event.stopPropagation();
          //alert(feedbackDiv);
          if (!inputField.validity.valid) {
            let errorMessage = '<div class="mx-auto w-25"><ul>';
              
              if (inputField.validity.patternMismatch) {
            errorMessage += '<li>Please use only the following characters:Letter,number,dot or hyphen.</li>';
            }
            if (inputField.validity.tooShort) {
                errorMessage += '<li>Input is too short.</li>';
            }
            if (inputField.validity.tooLong) {
                errorMessage += '<li>Input is too long.</li>';
            }
            errorMessage += '</ul></div>';
            this.classList.add('is-invalid');
            feedbackDiv.innerHTML = errorMessage;
          }
      }
      this.classList.add('was-validated')
      }, false
  );
</script>
